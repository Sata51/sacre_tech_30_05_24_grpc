<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: response.proto

namespace Service;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>service.CalculatorResponse</code>
 */
class CalculatorResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>float addition = 1;</code>
     */
    protected $addition = 0.0;
    /**
     * Generated from protobuf field <code>float subtraction = 2;</code>
     */
    protected $subtraction = 0.0;
    /**
     * Generated from protobuf field <code>float multiplication = 3;</code>
     */
    protected $multiplication = 0.0;
    /**
     * Generated from protobuf field <code>float division = 4;</code>
     */
    protected $division = 0.0;
    /**
     * Generated from protobuf field <code>.service.ClientResponseInfo response_info = 5;</code>
     */
    protected $response_info = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type float $addition
     *     @type float $subtraction
     *     @type float $multiplication
     *     @type float $division
     *     @type \Service\ClientResponseInfo $response_info
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Response::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>float addition = 1;</code>
     * @return float
     */
    public function getAddition()
    {
        return $this->addition;
    }

    /**
     * Generated from protobuf field <code>float addition = 1;</code>
     * @param float $var
     * @return $this
     */
    public function setAddition($var)
    {
        GPBUtil::checkFloat($var);
        $this->addition = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>float subtraction = 2;</code>
     * @return float
     */
    public function getSubtraction()
    {
        return $this->subtraction;
    }

    /**
     * Generated from protobuf field <code>float subtraction = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setSubtraction($var)
    {
        GPBUtil::checkFloat($var);
        $this->subtraction = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>float multiplication = 3;</code>
     * @return float
     */
    public function getMultiplication()
    {
        return $this->multiplication;
    }

    /**
     * Generated from protobuf field <code>float multiplication = 3;</code>
     * @param float $var
     * @return $this
     */
    public function setMultiplication($var)
    {
        GPBUtil::checkFloat($var);
        $this->multiplication = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>float division = 4;</code>
     * @return float
     */
    public function getDivision()
    {
        return $this->division;
    }

    /**
     * Generated from protobuf field <code>float division = 4;</code>
     * @param float $var
     * @return $this
     */
    public function setDivision($var)
    {
        GPBUtil::checkFloat($var);
        $this->division = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.service.ClientResponseInfo response_info = 5;</code>
     * @return \Service\ClientResponseInfo|null
     */
    public function getResponseInfo()
    {
        return $this->response_info;
    }

    public function hasResponseInfo()
    {
        return isset($this->response_info);
    }

    public function clearResponseInfo()
    {
        unset($this->response_info);
    }

    /**
     * Generated from protobuf field <code>.service.ClientResponseInfo response_info = 5;</code>
     * @param \Service\ClientResponseInfo $var
     * @return $this
     */
    public function setResponseInfo($var)
    {
        GPBUtil::checkMessage($var, \Service\ClientResponseInfo::class);
        $this->response_info = $var;

        return $this;
    }

}

