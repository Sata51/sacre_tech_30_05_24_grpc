name: sacre_tech_30_05_2024_grpc

volumes:
  traefik-access-log:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $PWD/dev/infra/data/traefik-access-log

networks:
  default:
    name: sacre_tech
    external: true

services:
  dart_server:
    build:
      context: .
      dockerfile: dev/docker/dart.Dockerfile
    ports:
      - "50051:50051"
    container_name: dart_server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dart_server.rule=Host(`grpc.sacre-tech.local`)"
      - "traefik.http.routers.dart_server.entrypoints=grpc"
      - "traefik.http.routers.dart_server.service=grcp_balancer"
      - "traefik.http.services.grcp_balancer.loadbalancer.server.port=50051"
      - "traefik.http.services.grcp_balancer.loadbalancer.server.scheme=h2c"
      - "traefik.http.services.grcp_balancer.loadbalancer.server.weight=1"

  go_server:
    build:
      context: .
      dockerfile: dev/docker/go.Dockerfile
    ports:
      - "50052:50051"
    container_name: go_server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.go_server.rule=Host(`grpc.sacre-tech.local`)"
      - "traefik.http.routers.go_server.entrypoints=grpc"
      - "traefik.http.routers.go_server.service=grcp_balancer"
      - "traefik.http.services.grcp_balancer.loadbalancer.server.port=50051"
      - "traefik.http.services.grcp_balancer.loadbalancer.server.scheme=h2c"
      - "traefik.http.services.grcp_balancer.loadbalancer.server.weight=1"

  node_dynamic_server:
    build:
      context: .
      dockerfile: dev/docker/node-dyn.Dockerfile
    ports:
      - "50053:50051"
    volumes:
      - ./proto_files:/proto_files:ro
    container_name: node_dynamic_server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node_dynamic_server.rule=Host(`grpc.sacre-tech.local`)"
      - "traefik.http.routers.node_dynamic_server.entrypoints=grpc"
      - "traefik.http.routers.node_dynamic_server.service=grcp_balancer"
      - "traefik.http.services.grcp_balancer.loadbalancer.server.port=50051"
      - "traefik.http.services.grcp_balancer.loadbalancer.server.scheme=h2c"
      - "traefik.http.services.grcp_balancer.loadbalancer.server.weight=1"

  node_static_server:
    build:
      context: .
      dockerfile: dev/docker/node-static.Dockerfile
    ports:
      - "50054:50051"
    container_name: node_static_server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node_static_server.rule=Host(`grpc.sacre-tech.local`)"
      - "traefik.http.routers.node_static_server.entrypoints=grpc"
      - "traefik.http.routers.node_static_server.service=grcp_balancer"
      - "traefik.http.services.grcp_balancer.loadbalancer.server.port=50051"
      - "traefik.http.services.grcp_balancer.loadbalancer.server.scheme=h2c"
      - "traefik.http.services.grcp_balancer.loadbalancer.server.weight=1"

  python_server:
    build:
      context: .
      dockerfile: dev/docker/python.Dockerfile
    ports:
      - "50055:50051"
    container_name: python_server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.python_server.rule=Host(`grpc.sacre-tech.local`)"
      - "traefik.http.routers.python_server.entrypoints=grpc"
      - "traefik.http.routers.python_server.service=grcp_balancer"
      - "traefik.http.services.grcp_balancer.loadbalancer.server.port=50051"
      - "traefik.http.services.grcp_balancer.loadbalancer.server.scheme=h2c"
      - "traefik.http.services.grcp_balancer.loadbalancer.server.weight=1"

  ruby_server:
    build:
      context: .
      dockerfile: dev/docker/ruby.Dockerfile
    ports:
      - "50056:50051"
    container_name: ruby_server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ruby_server.rule=Host(`grpc.sacre-tech.local`)"
      - "traefik.http.routers.ruby_server.entrypoints=grpc"
      - "traefik.http.routers.ruby_server.service=grcp_balancer"
      - "traefik.http.services.grcp_balancer.loadbalancer.server.port=50051"
      - "traefik.http.services.grcp_balancer.loadbalancer.server.scheme=h2c"
      - "traefik.http.services.grcp_balancer.loadbalancer.server.weight=1"

  rust_server:
    build:
      context: .
      dockerfile: dev/docker/rust.Dockerfile
    ports:
      - "50057:50051"
    container_name: rust_server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rust_server.rule=Host(`grpc.sacre-tech.local`)"
      - "traefik.http.routers.rust_server.entrypoints=grpc"
      - "traefik.http.routers.rust_server.service=grcp_balancer"
      - "traefik.http.services.grcp_balancer.loadbalancer.server.port=50051"
      - "traefik.http.services.grcp_balancer.loadbalancer.server.scheme=h2c"
      - "traefik.http.services.grcp_balancer.loadbalancer.server.weight=1"

  traefik:
    image: traefik:v3.0
    ports:
      # The HTTP port
      - "80:80"
      # The HTTPS port
      - "443:443"
      # The GRPC port
      - "9001:9001"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - $PWD/dev/infra/config/traefik.yml:/etc/traefik/traefik.yml
      - $PWD/dev/infra/config/certificates.yml:/etc/traefik/certificates.yml
      - traefik-access-log:/var/log/traefik/log
      - $PWD/dev/infra/certs:/etc/certs:ro
    container_name: traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.sacre-tech.local`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
